{"version":3,"file":"pages/item-app.bundle.js","mappings":"uZACgCA,MAAMC,OAAQ,E,ySAEVD,MAAMC,KAAKC,I,uHACTF,MAAMC,KAAKE,O,kOCkB3CC,MAAO,CACLC,MAAO,GACPC,IAAK,MAEPC,YAAa,CACXC,WAAU,UACVC,QAAO,WAETC,cAAcV,EAAOI,GACnB,OAAQ,qBAAsBC,IAC5BM,KAAKC,OAAO,CACVP,MAAOA,QAIbQ,YACE,YAAa,mBAEfC,OAAOC,GACLJ,KAAKC,OAAO,CACVN,IAAKS,EAAEC,OAAOC,QAEhB,YAAa,mBAAoBN,KAAKP,MAAME,MAE9CY,MAAMH,GACJJ,KAAKC,OAAO,CACVN,IAAK,KAEP,YAAa,mBAAmB,M,0PAhDRF,MAAME,K,2CAAgBQ,U,yGAChCI,O,+CAAoB,EAAAd,MAAME,O,yLAIJL,KAAKE,O,0CAA7B,UAAU,EAAAF,KAAKC,U","sources":["webpack://routing_demo/./src/pages/item-detail.riot","webpack://routing_demo/./src/pages/item-list.riot"],"sourcesContent":["<item-detail>\n  <div class=\"item-detail\" if={ props.item || true }>\n    <h3>Item Details</h3>\n    <div><b class=\"label\">ID:</b> { props.item.id }</div>\n    <div><b class=\"label\">Name:</b> { props.item.title }</div>\n  </div>\n\n  <style>\n    .item-detail {\n      padding: 1rem 0;\n    }\n\n    .label {\n      margin-right: 1rem;\n    }\n  </style>\n</item-detail>\n","<item-list>\n    <p>Search:</p>\n    <input name='input' value={ state.txt } onkeyup={ search } />\n    <button onclick={ clear } disabled={ !state.txt }>Clear</button>\n    <div>\n      <ul>\n        <li each={ item in state.items }>\n          <a href={ `/#view/${item.id}` }>{ item.title }</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <script>\n    import { router } from '@riotjs/route'\n    import riox from '../libs/riox'\n    import ItemDetail from './item-detail.riot'\n    import AddItem from './item-detail.riot'\n\n    // This is essentially the equivalent of the Flux view-controller.\n    // Could be broken down further into more sub-componenets, if you wished to re-use views.\n    export default {\n      state: {\n        items: [],\n        txt: null,\n      },\n      componenets: {\n        ItemDetail,\n        AddItem,\n      },\n      onBeforeMount(props, state) {\n        riox.on('item_list_changed', (items) => {\n          this.update({\n            items: items\n          })\n        })\n      },\n      onMounted() {\n        riox.trigger('item_list_init')\n      },\n      search(e) {\n        this.update({\n          txt: e.target.value\n        })\n        riox.trigger('item_list_search', this.state.txt)\n      },\n      clear(e) {\n        this.update({\n          txt: ''\n        })\n        riox.trigger('item_list_search','')\n      },\n    }\n  </script>\n\n</item-list>\n"],"names":["props","item","id","title","state","items","txt","componenets","ItemDetail","AddItem","onBeforeMount","this","update","onMounted","search","e","target","value","clear"],"sourceRoot":""}